name: Github Actions Bazel Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up JDK 11 in runtime environment for running the Detect tool (invoked by the
      # detect plugin)
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      # Set up Python 3.8 & download, cache blackduck-c-cpp
      - name: Setup python
        uses: actions/setup-python@v3
        with:
          python-version: '3.8'
          cache: 'pip'
      - run: pip install blackduck-c-cpp -r requirements.txt

      # Remove the comment below when want to start a debugging ssh session here
      #  uses: lhotari/action-upterm@v1
      
      # Execute test by blackduck-c-cpp
      - name: Test by blackduck-c-cpp
        working-directory: ./cpp-test/src
        env:
          COV_CONFIG: '{"clang++-12": "clangcxx", "clang-12": "clangcc"}'
          BUILD_CMD: 'bazel clean; bazel build --config=clang_config --sandbox_debug //main:hello-world'
          BD_URL: 'https://testing.blackduck.synopsys.com/'
          API_TOKEN: ${{ secrets.BLACKDUCK_TESTSERVER_TOKEN }} 
        run: >
          blackduck-c-cpp
          --cov_configure_args="$COV_CONFIG"
          --build_cmd="$BUILD_CMD"
          --project_name="MK-woven-bd-c-cpp-test"
          --project_version="$GITHUB_RUN_NUMBER"
          --build_dir="$GITHUB_WORKSPACE/cpp-test/src"
          --bd_url="$BD_URL"
          --api_token="$API_TOKEN"
          --additional_sig_scan_args="--detect.wait.for.results=true"
          # TODO: To add synchronous wait parameter for blackduck scan

      # Execute script to get blackduck-c-cpp reults and generate a SARIF file
      #- name: Generate SARIF file
      # if the script is installed in the same repo
      #  run: python snps-sca-to-sarif.py results.sarif
      #
      # SARIF file content :
      # Will reuse the following function in a public Github repo to compile the SARIF file
      # https://github.com/synopsys-sig-community/blackduck-direct-scan-action/blob/5a1d2ade62bd9cfa19f342c4b041d7b7b25babab/bdscan/classComponentList.py#L354
      
      # Upload the generated SARIF file
      #- name: Upload SARIF file
      #  uses: github/codeql-action/upload-sarif@v2
      #  with:
      #    sarif_file: results.sarif
          # Optional category for the results
      #    category: my-SCA-results 
