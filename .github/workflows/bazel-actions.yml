name: Github Actions Bazel Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      # Set up JDK 11 in runtime environment for running the Detect tool (invoked by the
      # detect plugin)
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'

      # Set up Python 3.8 & install, cache blackduck-c-cpp
      - name: Setup python
        uses: actions/setup-python@v3
        with:
          python-version: '3.8'
          cache: 'pip'
      - run: pip install blackduck-c-cpp -r requirements.txt

      # Execute test by blackduck-c-cpp
      - name: Test by blackduck-c-cpp
        working-directory: ./cpp-test/src
        env:
          Cov_Configure: '{"clang++-12": "clangcxx", "clang-12": "clangcc"}'
          Build_Command: 'bazel clean; bazel build --config=clang_config --sandbox_debug //main:hello-world'
          BD_Url: 'https://testing.blackduck.synopsys.com/'
          API_TOKEN: ${{ secrets.BLACKDUCK_TESTSERVER_TOKEN }} 
        run: |
          blackduck-c-cpp \
            --cov_configure_args="$Cov_Configure" \
            --build_cmd="$Build_Command" \
            --project_name="MK-woven-bd-c-cpp-test" \ 
            --project_version="1.0" \
            --build_dir="$GITHUB_WORKSPACE/cpp-test/src" \
            --bd_url="$BD_Url" \
            --api_token="ZDc5MjkwYzQtMzRhYy00OWQ4LWE2NmUtODc2NjFkM2FkY2Y1OmEwNGIwMmNjLWViOTktNGEwMy04YmQ2LTU5M2M3YjBlN2VjNw=="

      #  uses: lhotari/action-upterm@v1
      # Runs a set of commands using the runners shell
      #- name: Run a multi-line script
      #  run: |
      #    echo Add other actions to build,
      #    echo test, and deploy your project.
